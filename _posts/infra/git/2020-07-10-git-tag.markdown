---
title: "git 에서 tag 사용하기"
excerpt: "tag 의미, 사용하는 이유, 사용법 등"
categories:
  - "infra"
  - "git"
tag:
  - "git"
  - "tag"
last_modified_at: 2020-07-10
---

흔히들 이야기하는 소스 형상관리(version control) 툴 이라고 하면 svn 과 git 을 떠올리게 됩니다. 두 가지 툴이 가장 많이 사용되는 것 같고, 저 역시 두 가지를 다 사용하고 있습니다. 복수의 다른 개발자들과 협업하고 소스를 안전하게 보관하는 목적으로 사용하기 때문에 특징적인 기능들에 대해서는 잘 알지 못한 채, 다운 받고 다시 업로드 하는 일이 주된 과정으로 인식되게 됩니다.

사실 제가 생까하는 git의 강력한 기능은 두 가지 입니다. 하나는 branch 관리 기능이고, 다른 하나는 tag 입니다. (물론 tag는 svn 에도 있습니다) 여기서는 그 중에서 tag에 대해서 조금 알아보도록 하겠습니다. 

여기서는 branch에 대한 개념이나 의미는 완전히 배제하고 글을 적겠습니다. 그에 대한 개념은 따로 정리하도록 하겠습니다. 
{: .notice--info}

## tag 의미 & 사용하는 이유

tag 는 그야말로 꼬리표 입니다. 소스를 개발하는 과정 중에 특정 시점마다 꼬리표를 붙여 두는 것입니다.

예를 들어 보겠습니다. 만약 일주일에 한 번씩 Weekly build 를 하고 minor 버전을 하나씩 내보낸다고 가정하면, 각 버전을 빌드하는 시점, 그러니까 소스코드를 임시로 freezing 하는 시점에 tag를 생성합니다. (tag를 긋는다고도 표현합니다)

이렇게 되어 그 다음주에 개발을 하다가, 완전 잘못된 방향으로 2주간 개발을 해왔다는 것을 깨닫거나, 혹은 아키텍쳐가 변경되어, 2주전부터 다시 개발해야 하는 상황이라면, 해당 태그로 이동하여 개발을 다시 해나갈 수 있습니다. 

혹은 이미 배포되어 운영중인 시스템이 있다면, 운영 서버로 이관한 버전에 대해서 tag를 생성하고, 추후에 유지보수가 필요한 상황이 되면 그 때의 버전을 내려받아, 디버깅(debugging)을 할 수 있습니다. 

## tag 사용법

#### 현재 repository 의 tag 리스트 확인

```bash
$ git tag
```

#### tag 생성

```bash
$ git tag {tag name}
```

#### push 하기

특정 태그명에 올리기

```bash
$ git push origin {tag name}
```

로컬에 존재하는 모든 태그들을 원격 저장소에 모두 올리기

```bash
$ git push --tags
```

## 출처 및 참고자료

https://mygumi.tistory.com/159